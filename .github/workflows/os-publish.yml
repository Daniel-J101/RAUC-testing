name: Update latest-version.json in Artifactory

on:
  release:
    types: [released]

jobs:
  update-latest-version:
    if: ${{ !github.event.release.prerelease }}
    runs-on: ubuntu-latest

    steps:
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Download latest-version.json from Artifactory
      env:
        ART_USER: ${{ secrets.ART_USER }}
        ART_TOKEN: ${{ secrets.ART_TOKEN }}
      run: |
        curl -f -u "$ART_USER:$ART_TOKEN" \
          -o latest-version.json \
          "https://artifactory.switchless.net/artifactory/core-os/latest-version.json" || echo "{}" > latest-version.json

    - name: Insert new version into latest-version.json
      run: |
        pip install packaging

        python3 -c "
import json
from packaging.version import parse as V

new_version = '${{ github.ref_name }}'
url = f'https://artifactory.switchless.net/artifactory/core-os/{new_version}/'

try:
    with open('latest-version.json') as f:
        data = json.load(f)
except:
    data = {}

data[new_version] = url
# Sort descending by semver
sorted_data = dict(sorted(data.items(), key=lambda x: V(x[0]), reverse=True))

with open('latest-version.json', 'w') as f:
    json.dump(sorted_data, f, indent=2)
"

    - name: Upload updated latest-version.json to Artifactory
      env:
        ART_USER: ${{ secrets.ART_USER }}
        ART_TOKEN: ${{ secrets.ART_TOKEN }}
      run: |
        curl -u "$ART_USER:$ART_TOKEN" \
          -T latest-version.json \
          "https://artifactory.switchless.net/artifactory/core-os/latest-version.json"
